import java.util.ArrayList;  // подключаем класс ArrayList, чтобы использовать динамические списки

public class Main {
    public static void main(String[] args) {
        int V = 5; // количество вершин
        ArrayList<ArrayList<Integer>> g = new ArrayList<>();  // создаём список списков - каждая вершина будет хранить список соседей

        for (int i = 0; i < V; i++) {  // для каждой вершины создаём пустой ArrayList соседей, после этого g.get(i) возвращает список соседей вершины i
            g.add(new ArrayList<Integer>());
        }

        g.get(0).add(1);  // добавляем рёбра (неориентированные)
        g.get(0).add(4);  // добавляем рёбра (неориентированные)
        g.get(1).add(0);  // добавляем рёбра (неориентированные)
        g.get(1).add(2);  // добавляем рёбра (неориентированные)
        g.get(1).add(3);  // добавляем рёбра (неориентированные)
        g.get(2).add(1);  // добавляем рёбра (неориентированные)
        g.get(3).add(1);  // добавляем рёбра (неориентированные)
        g.get(4).add(0);  // добавляем рёбра (неориентированные)

        for (int i = 0; i < V; i++) {  // проходимся по каждой вершине
            System.out.print(i + ": ");  // печатаем номер вершины с двоеточием
            for (int neighbor : g.get(i)) {  // перебираем всех соседей вершины i
                System.out.print(neighbor + " ");  // выводим соседей
            }
            System.out.println();  // переход на новую строчку после того, как вывели всех соседей текущей вершины
        }
    }
}
