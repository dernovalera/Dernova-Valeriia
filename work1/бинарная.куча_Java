import java.util.ArrayList;  // динамический массив для хранения элементов кучи
import java.util.List;  // удобно для объявления переменной heap

public class Main{
    List<Integer> heap = new ArrayList<>(); // храним кучу в списке ArrayList для доступа по индексу

    void insert(int x) {  // вставка элемента
        heap.add(x);                // добавляем элемент в конец
        int i = heap.size()-1;      // индекс только что вставленного элемента
        while (i > 0 && heap.get(i) < heap.get((i-1)/2)) { // пока элемент меньше родителя и не находится в корне - поднимаем его вверх
            int tmp = heap.get(i); // текущий элемент
            heap.set(i, heap.get((i-1)/2));  // на место элемента i ставится родитель
            heap.set((i-1)/2, tmp);  // на место родителя ставится текущий элемент (tmp)
            i = (i-1)/2;           // идём вверх по дереву для следующей проверки
        }
    }
    int extractMin() {  // извлечение минимума
        int res = heap.get(0);                   // сохраняем корень (минимальный элемент)
        heap.set(0, heap.get(heap.size()-1));    // последний элемент ставим в корень (чтобы закрыть дыру)
        heap.remove(heap.size()-1);              // удаляем последний элемент (который поставили в корень)
        int i = 0;  // индекс текущего элемента (начиная с корня)
        while (2*i+1 < heap.size()) {            // пока есть левый потомок
            int j = 2*i+1;                       // левый ребёнок
            if (j+1 < heap.size() && heap.get(j+1) < heap.get(j)) j++; // выбираем меньшего ребенка для обмена
            if (heap.get(i) <= heap.get(j)) break; // если порядок не нарушен - стоп
            int tmp = heap.get(i);  // текущий элемент (который сохранили)
            heap.set(i, heap.get(j));  // на место текущего элемента (i) ставим значение меньшего ребёнка
            heap.set(j, tmp);  // родитель спустился вниз
            i = j;  // идём вниз
        }
        return res;                              // возвращаем минимум
    }

    public static void main(String[] args) {  // запуск программы
        Main h = new Main();  // создается объем кучи
        h.insert(15);  // вставляем число
        h.insert(36);  // вставляем число
        h.insert(8);  // вставляем число
        h.insert(13);  // вставляем число
        System.out.println(h.extractMin()); // возвращаем минимальный элемент
        System.out.println(h.extractMin()); // возвращаем минимальный элемент
    }
}
